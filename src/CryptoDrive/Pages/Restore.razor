@page "/restore"

@inherits AppStateComponentBase

<MatHeadline6>Cloud Explorer</MatHeadline6>

<FileExplorer @ref="_fileExplorer" SyncAccount="this.AppState.RestoreSettings.SyncAccount"></FileExplorer>

<EditForm Model="this.AppState.RestoreSettings" OnValidSubmit="this.RestoreAsync">
    <DataAnnotationsValidator />
    <div class="restore-settings">
        <MatSelectItem Label="Restore Account"
                       @bind-Value="@this.AppState.RestoreSettings.SyncAccount"
                       Items="@this.AppState.Config.SyncAccounts">
            <ItemTemplate Context="value">
                @Utilities.GetEnumLocalization(@value.Provider) - @value.Username
            </ItemTemplate>
        </MatSelectItem>

        <MatTextField Label="Restore Key"
                      Icon="vpn_key"
                      @bind-Value="this.AppState.RestoreSettings.RestoreKey">
        </MatTextField>
        <ValidationMessage For="@(() => this.AppState.RestoreSettings.RestoreKey)" />

        <MatTextField Label="Restore Folder"
                      PlaceHolder="e.g. C:\Restore"
                      Icon="folder"
                      @bind-Value="this.AppState.RestoreSettings.RestoreFolder">
        </MatTextField>
        <ValidationMessage For="@(() => this.AppState.RestoreSettings.RestoreFolder)" />
    </div>

    <MatButton Type="submit">Restore!</MatButton>
</EditForm>

<MatDialog @bind-IsOpen="this.AppState.ShowRestoreDialog"
           CanBeClosed="false">
    <MatDialogTitle>@(this.AppState.RestoreFlags.HasFlag(RestoreFlags.Restoring) ? "Restore" : "Restore finished")</MatDialogTitle>
    <MatDialogContent>
        @if (this.AppState.RestoreFlags.HasFlag(RestoreFlags.Restoring))
        {
            <span class="restore-message">@this.AppState.RestoreMessage</span>
            <MatProgressBar Indeterminate="true"></MatProgressBar>
        }

        @if (this.AppState.RestoreFlags.HasFlag(RestoreFlags.Error))
        {
            <div class="restore-warning">
                <div class="text">
                    <i class="material-icons">warning</i> &nbsp;<span>One or more error occured.</span>
                </div>
                <div class="link">
                    <a href="/logs/@this.RestoreLogFileName" target="_blank">@this.RestoreLogFileName</a>
                </div>
            </div>
        }
    </MatDialogContent>
    <MatDialogActions>
        @if (this.AppState.RestoreFlags.HasFlag(RestoreFlags.Restoring))
        {
            <MatButton OnClick="this.CancelRestore">Cancel</MatButton>
        }
        else
        {
            <MatButton OnClick="() => this.AppState.ShowRestoreDialog = false">Close</MatButton>
        }
    </MatDialogActions>
</MatDialog>