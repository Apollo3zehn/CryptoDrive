@page "/"

@using CryptoDrive.Drives
@inject IJSRuntime JsRuntime
@inherits AppStateComponentBase

@if (this.AppState.Config.SyncAccounts.Any())
{
    <MatHeadline5>Sync Accounts</MatHeadline5>
    <MatTabGroup ActiveIndexChanged="this.OnActiveIndexChanged">
        @foreach (var syncAccount in this.AppState.Config.SyncAccounts)
        {
            <MatTab>
                <LabelContent>
                    @if (syncAccount.Provider == Drives.DriveProvider.OneDrive)
                    {
                        <i class="fas fa-cloud"></i>
                    }
                    else if (syncAccount.Provider == Drives.DriveProvider.GoogleDrive)
                    {
                        <i class="fab fa-google-drive"></i>
                    }
                    else if (syncAccount.Provider == Drives.DriveProvider.Dropbox)
                    {
                        <i class="fab fa-dropbox"></i>
                    }
                    &nbsp;@syncAccount.Username.Split("@").First()

                    <MatIcon Icon="@MatIconNames.Close"
                             @onclick="() => this.AppState.RemoveSyncAccountAsync(syncAccount)"></MatIcon>
                </LabelContent>
                <ChildContent>
                    <div class="sync-account">
                        <div class="sync-folder-pairs-box">
                            @if (syncAccount.SyncFolderPairs.Any())
                            {
                                <MatHeadline6>Sync Folders</MatHeadline6>
                                <div class="sync-folder-pairs">
                                    @foreach (var syncFolderPair in syncAccount.SyncFolderPairs)
                                    {
                                        <SyncFolderPairView DataContext="syncFolderPair" />
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="no-sync-folder-pair">No sync folder pairs available</div>
                            }
                        </div>

                        <div class="controls">
                            @if (!this.AppState.Config.IsSyncEnabled)
                            {
                                <div class="icon-button"
                                     @onclick="this.AppState.InitializeAddEditSyncFolderDialog">
                                    <MatIcon Icon="create_new_folder">
                                    </MatIcon>
                                </div>
                            }
                            <div class="icon-button"
                                 @onclick="() => this.AppState.ShowAddDriveProviderDialog = true">
                                <MatIcon Icon="person_add">
                                </MatIcon>
                            </div>
                        </div>
                    </div>
                </ChildContent>
            </MatTab>
        }

    </MatTabGroup>
}
else
{
    <div class="jumbotron">
        <h1 class="display-4">Hello, Human!</h1>
        <p class="lead">Here is your Crypto Drive speaking. Together we will safely backup your data without the need to trust anyone but you!</p>
        <hr class="my-4">
        <p>Choose a drive provider to start your encrypted backup. You will get asked for some permissions that allow me to sync your files automagically.</p>

        <div class="sign-in">
            <MatButton Icon="person_add" @onclick="() => this.AppState.ShowAddDriveProviderDialog = true">
                <i class="fas fa-sign-in-alt"></i>&nbsp;&nbsp;&nbsp;Let`s go!
            </MatButton>
        </div>
    </div>
}

@if (this.AppState.SelectedSyncFolderPair != null)
{
    <EditForm Model="this.AppState.SelectedSyncFolderPairEdit" OnValidSubmit="this.AppState.AddOrUpdateSyncFolderPair">
        <DataAnnotationsValidator />

        <MatDialog @bind-IsOpen="this.AppState.ShowSyncFolderAddEditDialog"
                   CanBeClosed="false">
            <MatDialogTitle>Hello, Human!</MatDialogTitle>
            <MatDialogContent>
                <p>Where should I look for your data to be synced?</p>

                @if (this.AppState.ShowSyncFolderAddEditDialog)
                {
                    <SyncFolderPairEditView DataContext="this.AppState.SelectedSyncFolderPairEdit" />
                }
            </MatDialogContent>
            <MatDialogActions>
                <MatButton OnClick="() => this.AppState.ShowSyncFolderAddEditDialog = false">
                    Cancel
                </MatButton>
                <MatButton Type="submit">
                    Apply
                </MatButton>
            </MatDialogActions>
        </MatDialog>

    </EditForm>
}

<MatDialog @bind-IsOpen="this.AppState.ShowAddDriveProviderDialog"
           CanBeClosed="false">
    <MatDialogTitle>Choose a drive provider:</MatDialogTitle>
    <MatDialogContent>
        <div class="drive-providers-selector">
            <div class="drive-provider" @onclick="() => this.AppState.AddSyncAccountAsync(DriveProvider.OneDrive)">
                <div class="icon">
                    <i class="fas fa-cloud"></i>
                </div>
                <div class="description">
                    OneDrive
                </div>
            </div>
            <div class="drive-provider" @onclick="() => this.AppState.AddSyncAccountAsync(DriveProvider.GoogleDrive)">
                <div class="icon">
                    <i class="fab fa-google-drive"></i>
                </div>
                <div class="description">
                    Google Drive
                </div>
            </div>
            <div class="drive-provider" @onclick="() => this.AppState.AddSyncAccountAsync(DriveProvider.Dropbox)">
                <div class="icon">
                    <i class="fab fa-dropbox"></i>
                </div>
                <div class="description">
                    Dropbox
                </div>
            </div>
        </div>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="() => this.AppState.ShowAddDriveProviderDialog = false">Cancel</MatButton>
    </MatDialogActions>
</MatDialog>

<MatDialog @bind-IsOpen="this.AppState.ShowSyncFolderRemoveDialog"
           CanBeClosed="false">
    <MatDialogTitle>Hello, Human!</MatDialogTitle>
    <MatDialogContent>
        <p>Do you want me to stop syncing this folder pair?</p>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="() => this.AppState.ShowSyncFolderRemoveDialog = false">No Thanks</MatButton>
        <MatButton OnClick="this.AppState.RemoveSyncFolderPair">Yes!</MatButton>
    </MatDialogActions>
</MatDialog>

<MatDialog @bind-IsOpen="this.AppState.ShowKeyDialog"
           CanBeClosed="false">
    <MatDialogTitle>Hello, Human!</MatDialogTitle>
    <MatDialogContent>
        <p>This is your super-secret secret-key to encryp and decrypt your data. You must promise me to print or make a photo of it and then store it safely.</p>
        <MatStringField Id="SuperSecretKey"
                        ReadOnly="true"
                        Icon="file_copy"
                        IconOnClick="() => JsInterop.CopyToClipboard(this.JsRuntime, this.AppState.Config.SymmetricKey)"
                        @bind-Value="this.AppState.Config.SymmetricKey"
                        Label="Super-secret secret key">
        </MatStringField>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="this.AppState.ConfirmKeyIsSecured">I hereby promise high and holy that I copied the key.</MatButton>
    </MatDialogActions>
</MatDialog>