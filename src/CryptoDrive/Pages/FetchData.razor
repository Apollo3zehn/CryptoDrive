@page "/fetchdata"
@using CryptoDrive.Graph

@inject IGraphService GraphService
@attribute [Authorize]

@if (_isRegistered.HasValue)
{
    if (_isRegistered.Value)
    {
        <span>Registered</span>
        <button @onclick="() => this.UnregisterAsync()">Unregister</button>
    }
    else
    {
        <button @onclick="() => this.RegisterAsync()">Register Now!</button>
    }
}
else
{
    <span>loading registration details ...</span>
}

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@code
{
    bool? _isRegistered;
    string _userName;

    protected override async Task OnInitializedAsync()
    {
        _isRegistered = await this.GraphService.IsRegisteredAsync();

        await base.OnInitializedAsync();
    }

    private async Task RegisterAsync()
    {
        await this.GraphService.RegisterAsync();
        _isRegistered = true;
    }

    private async Task UnregisterAsync()
    {
        await this.GraphService.UnregisterAsync();
        _isRegistered = false;
    }
}
